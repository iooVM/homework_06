# Generated by Django 5.1.5 on 2025-02-04 04:54

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(choices=[('internet', 'Интернет'), ('telephony', 'Телефония')], max_length=50, verbose_name='Тип услуги')),
                ('connection_type', models.CharField(choices=[('wired', 'Проводной'), ('radio', 'Радио'), ('lte', 'LTE')], max_length=50, verbose_name='Способ подключения')),
                ('speed', models.CharField(choices=[('10M', '10 Mbit/s'), ('100M', '100 Mbit/s'), ('1G', '1 Gbit/s'), ('10G', '10 Gbit/s')], max_length=50, verbose_name='Скорость подключения')),
            ],
        ),
        migrations.CreateModel(
            name='NetworkDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('ip_address', models.GenericIPAddressField(protocol='IPv4', verbose_name='IP Адрес')),
                ('login', models.CharField(max_length=255, verbose_name='Логин')),
                ('password', models.CharField(max_length=255, verbose_name='Пароль')),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('address', models.CharField(max_length=255, verbose_name='Адрес')),
                ('td', models.CharField(max_length=255, verbose_name='Торговая дирекция, регион')),
                ('legal_entity', models.CharField(max_length=255, verbose_name='Юридическое лицо')),
                ('data_subnet', models.GenericIPAddressField(blank=True, null=True, protocol='IPv4', verbose_name='Подсеть Data')),
                ('voice_subnet', models.GenericIPAddressField(blank=True, null=True, protocol='IPv4', verbose_name='Подсеть Voice')),
                ('tech_subnet', models.GenericIPAddressField(blank=True, null=True, protocol='IPv4', verbose_name='Подсеть Tech')),
                ('iot_subnet', models.GenericIPAddressField(blank=True, null=True, protocol='IPv4', verbose_name='Подсеть IoT')),
            ],
        ),
        migrations.CreateModel(
            name='DedicatedProvider',
            fields=[
                ('service_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='network_manager.service')),
            ],
            bases=('network_manager.service',),
        ),
        migrations.CreateModel(
            name='MobileProvider',
            fields=[
                ('service_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='network_manager.service')),
                ('operator', models.CharField(max_length=255, verbose_name='Оператор')),
                ('sim_card_number', models.CharField(max_length=20, verbose_name='Номер SIM-карты')),
            ],
            bases=('network_manager.service',),
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_number', models.CharField(max_length=255, verbose_name='Номер договора')),
                ('contact_person', models.CharField(max_length=255, verbose_name='Контактное лицо')),
                ('email', models.EmailField(max_length=254, verbose_name='Адрес электронной почты')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='network_manager.service', verbose_name='Провайдер')),
            ],
        ),
        migrations.CreateModel(
            name='MikrotikGW',
            fields=[
                ('networkdevice_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='network_manager.networkdevice')),
                ('loopback_ip', models.GenericIPAddressField(protocol='IPv4', verbose_name='IP адрес Loopback')),
                ('ext_ip', models.GenericIPAddressField(protocol='IPv4', verbose_name='Внешний IP адрес')),
                ('ext_gw', models.GenericIPAddressField(protocol='IPv4', verbose_name='Внешний GW')),
                ('gre1', models.GenericIPAddressField(blank=True, null=True, protocol='IPv4', verbose_name='GRE1')),
                ('gre2', models.GenericIPAddressField(blank=True, null=True, protocol='IPv4', verbose_name='GRE2')),
                ('gre3', models.GenericIPAddressField(blank=True, null=True, protocol='IPv4', verbose_name='GRE3')),
                ('gre4', models.GenericIPAddressField(blank=True, null=True, protocol='IPv4', verbose_name='GRE4')),
            ],
            bases=('network_manager.networkdevice',),
        ),
        migrations.CreateModel(
            name='MikrotikLTE',
            fields=[
                ('networkdevice_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='network_manager.networkdevice')),
            ],
            bases=('network_manager.networkdevice',),
        ),
        migrations.AddField(
            model_name='networkdevice',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='network_manager.site', verbose_name='Расположение'),
        ),
        migrations.CreateModel(
            name='ExternalIP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(protocol='IPv4', verbose_name='IP Адрес')),
                ('mask', models.CharField(max_length=15, verbose_name='Маска')),
                ('gw', models.GenericIPAddressField(protocol='IPv4', verbose_name='Шлюз')),
                ('dedicated_provider', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='network_manager.dedicatedprovider', verbose_name='Выделенный провайдер')),
            ],
        ),
        migrations.AddField(
            model_name='dedicatedprovider',
            name='gateway',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='network_manager.mikrotikgw', verbose_name='Шлюз'),
        ),
    ]
